import Head from 'next/head'
import Image from 'next/image'
import Header from '../components/Header'
import Nav from '../components/Nav'
import Results from '../components/Results'
import styles from '../styles/Home.module.css'
import requests from '../utils/requests'
import { encode } from "base-64";
import FilterCard from '../components/FilterCard'
import { useEffect, useState } from 'react'
import {
  BrowserRouter as Router,
  Switch,
  Route,
  Link,
  useRouteMatch,
  useParams
} from "react-router-dom";
import HeaderItem from '../components/HeaderItem'


export default function Home({}) {

  // console.log(`my req ${results.etag}`)

  // console.log(`hihi`)

  const [results, setResults] = useState()

  const [filteredPostCode, setFilteredPostCode] = useState({
    postcode: []
  });

  const [companyData, setCompanyData] = useState(results);

  const filterByPostcode = (searchText) => {

    let filteredDataTemp = {...results}
    filteredDataTemp.items = []

    console.log(`inside index.js -> ${searchText}`)

    if(searchText === "" || searchText === " ") {
        setCompanyData(results) 
        console.log(`inside empty string`)

    }else{
      console.log(`looking for data ${searchText}`)

      results.items.map((item)=>{
        console.log(`traversing items`)

        if(item.registered_office_address.postal_code.toLowerCase().includes(searchText)){
          filteredDataTemp.items.push(item)
          console.log(`data found`)
        }
      })
      // for (var item in results.items) {
      //   console.log(`traversing items`)
      // }

      console.log(`data found ${filteredDataTemp.items.length}`)
      setCompanyData(filteredDataTemp) 
    }
    
  }


  const filterByCompanyName = (searchText) => {

    let filteredDataTemp = {...results}
    filteredDataTemp.items = []

    console.log(`inside index.js -> ${searchText}`)

    if(searchText === "" || searchText === " ") {
        setCompanyData(results) 
        console.log(`inside empty string`)

    }else{
      console.log(`looking for data ${searchText}`)

      results.items.map((item)=>{
        console.log(`traversing items`)

        if(item.company_name.toLowerCase().includes(searchText)){
          filteredDataTemp.items.push(item)
          console.log(`data found`)
        }
      })
      // for (var item in results.items) {
      //   console.log(`traversing items`)
      // }
      console.log(`data found ${filteredDataTemp.items.length}`)
      setCompanyData(filteredDataTemp) 
    }
    
  }

  
   const loadData =  async ()  => {

    let url = `${requests.advanceSearch.url}?incorporated_from=2020-07-21&incorporated_to=2022-07-21&size=100`;
    // let url2 = '?dissolved_from=2022-06-22&dissolved_to=2022-07-03'
    let username = '7defcf60-fc41-4010-9607-f1c866874e3a';
    let password = '';
    
    let headers = new Headers();
    
    //headers.append('Content-Type', 'text/json');
    headers.set('Authorization', 'Basic ' + encode(username + ":" + password));

    var request = "";

     request = await fetch(url, 
          {method:'GET',
            headers: headers,
            //credentials: 'user:passwd'
          })
    .then(response => response.json());
    // .then(json => console.log(json));
        // }

    // const request = await fetch(url).then((res) => res.json())

    // console.log(`my request ${request}`)

    setResults(request)
    setCompanyData(request)

  // return {
  //   props: {
  //     results:request,
  //   }
  // }

  }


  useEffect(()=>{

    loadData()

  },[])


  return (

    <div>

    <Router>
    <div>
      

      {/* <ul>
        <li>
          <Link to="/">Home</Link>
        </li>
        <li>
          <Link to="/about">About</Link>
        </li>
        <li>
          <Link to="/topics">Topics</Link>
        </li>
      </ul> */}

      <Switch>
        {/* <Route path="/about">
          <About />
        </Route>
        <Route path="/topics">
          <Topics />
        </Route> */}
        <Route path="/">
          <div>
          <Head>
        `    <title>tulip-DA</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>
          <Header />`
            {/* <h1>Let's build hulu 2.0</h1> */}
            {/* header */}          
            {/* nav */}
            {/* <Nav /> */}
            {/* results */}

            <div className='flex flex-grow'>
              <div className=' sticky top-2 '>
              <FilterCard
                enterPostCodeFunc = {filterByPostcode}
                enterComNameFunc = {filterByCompanyName}
              />
              </div>
              <Results
                results ={companyData}
              />
            </div>
          </div>
        </Route>
      </Switch>
    </div>
  </Router>
  </div>


   
  )
}


//fetching data from server
// export async function getServerSideProps(context) {
//   // const genre = context.query.genre;
//   // const request = await fetch(`https://api.themoviedb.org/3${requests[genre]?.url ||
//   //   requests.fetchTrending.url}`).then((res) => res.json())

 

//     let url = `${requests.advanceSearch.url}?incorporated_from=2020-07-21&incorporated_to=2022-07-21&size=100`;
//     // let url2 = '?dissolved_from=2022-06-22&dissolved_to=2022-07-03'
//     let username = '7defcf60-fc41-4010-9607-f1c866874e3a';
//     let password = '';
    
//     let headers = new Headers();
    
//     //headers.append('Content-Type', 'text/json');
//     headers.set('Authorization', 'Basic ' + encode(username + ":" + password));

//     var request = "";

//      request = await fetch(url, 
//           {method:'GET',
//             headers: headers,
//             //credentials: 'user:passwd'
//           })
//     .then(response => response.json());
//     // .then(json => console.log(json));
//         // }

//     // const request = await fetch(url).then((res) => res.json())

//     // console.log(`my request ${request}`)

//   return {
//     props: {
//       results:request,
//     }
//   }

// }
